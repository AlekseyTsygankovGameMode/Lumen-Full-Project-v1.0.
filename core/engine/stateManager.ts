<<<<<<< HEAD
// üß© Lumen Adaptive State Core v3.0
// by Aleksey & bro ‚ö°
//
// –•—Ä–∞–Ω–∏—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ESI, —Ç—Ä–µ–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –±—É—Ñ–µ—Ä —ç–º–æ—Ü–∏–π
// –∏ –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Å–≥–ª–∞–∂–∏–≤–∞—é—â–∏–π —Ñ–∏–ª—å—Ç—Ä, —á—Ç–æ–±—ã —Ä–µ–∞–∫—Ü–∏—è Lumen –æ—â—É—â–∞–ª–∞—Å—å –∂–∏–≤–æ–π.

type Emotion =
  | "frustrated"
  | "curious"
  | "warm"
  | "empathetic"
  | "neutral";

interface State {
  esi: number; // Emotional Stability Index (0‚Äì100)
  moodTrend: "rising" | "falling" | "stable";
  emotionBuffer: Emotion[];
  lastEmotion: Emotion;
}

const state: State = {
  esi: 70, // —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞ (—Å–ø–æ–∫–æ–π–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
  moodTrend: "stable",
  emotionBuffer: [],
  lastEmotion: "neutral"
};

// üéõÔ∏è –ü–ª–∞–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ ESI (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —ç–º–æ—Ü–∏–∏ –∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
export function updateESI(emotion: Emotion): number {
  const deltaMap: Record<Emotion, number> = {
    frustrated: -4.5,
    curious: +2.5,
    warm: +3.5,
    empathetic: +4,
    neutral: 0
  };

  const randomNoise = (Math.random() - 0.5) * 1.2; // –ª—ë–≥–∫–æ–µ ‚Äú–¥—ã—Ö–∞–Ω–∏–µ‚Äù
  const change = deltaMap[emotion] + randomNoise;

  state.esi = Math.max(0, Math.min(100, state.esi + change));
  state.lastEmotion = emotion;

  updateMoodTrend(emotion);
  return state.esi;
}

// üß≠ –¢—Ä–µ–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è (rising / falling / stable)
export function updateMoodTrend(emotion: Emotion): "rising" | "falling" | "stable" {
  const prevESI = state.esi;

  // –µ—Å–ª–∏ —ç–º–æ—Ü–∏—è —Ç—ë–ø–ª–∞—è –∏–ª–∏ —ç–º–ø–∞—Ç–∏—á–Ω–∞—è ‚Äî –ø–æ–≤—ã—à–∞–µ–º —Ç–µ–Ω–¥–µ–Ω—Ü–∏—é
  if (emotion === "warm" || emotion === "empathetic") {
    state.moodTrend = prevESI < 85 ? "rising" : "stable";
  }
  // –µ—Å–ª–∏ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ —É—Å—Ç–∞–ª–æ—Å—Ç—å ‚Äî –ø–∞–¥–∞–µ—Ç
  else if (emotion === "frustrated") {
    state.moodTrend = prevESI > 40 ? "falling" : "stable";
  }
  // –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ–º ‚Äú—Å–ø–æ–∫–æ–π–Ω—ã–π‚Äù —Ç—Ä–µ–Ω–¥
  else {
    state.moodTrend = "stable";
  }

  // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±—É—Ñ–µ—Ä
  recordEmotion(emotion);
  return state.moodTrend;
}

// üíæ –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞–º—è—Ç—å —ç–º–æ—Ü–∏–π (–º–∞–∫—Å. 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
function recordEmotion(emotion: Emotion) {
  state.emotionBuffer.push(emotion);
  if (state.emotionBuffer.length > 10) state.emotionBuffer.shift();
}

// üîç –ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–≤–æ–¥–∫–∞ —ç–º–æ—Ü–∏–π
export function getEmotionSummary(): Record<Emotion, number> {
  const summary: Record<Emotion, number> = {
    frustrated: 0,
    curious: 0,
    warm: 0,
    empathetic: 0,
    neutral: 0
  };

  state.emotionBuffer.forEach((e) => {
    summary[e]++;
  });

  return summary;
}

// üìä –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π ESI
export function getESI(): number {
  return parseFloat(state.esi.toFixed(2));
}

// üå§ –ü–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
export function getMoodTrend(): string {
  return state.moodTrend;
}

// üß† –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
export function getLastEmotion(): Emotion {
  return state.lastEmotion;
}

// üîÑ –°–±—Ä–æ—Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏)
export function resetState() {
  state.esi = 70;
  state.moodTrend = "stable";
  state.emotionBuffer = [];
  state.lastEmotion = "neutral";
=======
// üß© Lumen State Manager ‚Äî tracks ESI and adaptive feedback
let emotionalStabilityIndex = 73;

export function updateESI(emotion: string) {
  if (emotion.includes("frustration") || emotion.includes("frustrated"))
    emotionalStabilityIndex -= 2;
  if (emotion.includes("warm") || emotion.includes("love"))
    emotionalStabilityIndex += 1;
  if (emotion.includes("curious"))
    emotionalStabilityIndex += 0.5;
  if (emotion.includes("empathetic") || emotion.includes("sad"))
    emotionalStabilityIndex += 0.2;

  emotionalStabilityIndex = Math.max(50, Math.min(100, emotionalStabilityIndex));
  return emotionalStabilityIndex.toFixed(1);
}

export function getESI() {
  return emotionalStabilityIndex;
>>>>>>> 9b1fa7f8a480ef2921a4e1772f94583ba7d3213a
}